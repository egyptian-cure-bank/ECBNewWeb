@model ECBNewWeb.Models.DonationData

@{
    ViewBag.Title = "AddDonations";
    Layout = "~/Views/Shared/_LayoutShefaa2.cshtml";
}
<!--Scripts-->
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/fontawesome.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
@*<script src="//code.jquery.com/jquery-1.12.4.js"></script>
<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/popper.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<!--End Scripts-->
<!-- sidebar-wrapper------------------------------------Content---------------------------------------  -->
<main class="page-content">
    <div class="container-fluid">
        <h2>بيانات إيصال التبرع</h2>
        <p>إضافة تبرع</p>
        <hr>
        <div class="m-portlet__head">
            <div class="m-portlet__head-caption text-danger">
                <h6>
                    @ViewBag.CurrentLicenseName
                </h6>
            </div>
        </div>
        @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "saveDonationForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
            
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="" class="">اسم المحصل</label>
                    @{ var UserSession = Session["CurrentUser"] as ECBNewWeb.CustomAuthentication.CustomMembershipUser;
                        var UserName = Session["CurrentUser"];/*@UserSession.FirstName + " " + @UserSession.LastName;*/}
                    <input type="text" class="form-control" value="@UserName" disabled>
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">اسم المتبرع</label>
                    @Html.TextBoxFor(m => m.DonorName, new { @class = "form-control", @id = "donors" })
                    @Html.ValidationMessageFor(m => m.DonorName, "", new { @class = "text-danger" })

                    @*Related Donor Id stored in the below hidden field*@
                    @Html.TextAreaFor(m => m.DonorId, new { @id = "donorId", @hidden = true })
                    @Html.TextAreaFor(m => m.BankInfoChecked, new { @id = "bankInfoChecked", @hidden = true })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">الموقع</label>
                    @Html.DropDownListFor(x => x.SiteId, Model.MySites as List<SelectListItem>, new { @class = "form-control", @id = "sites" })
                    @Html.ValidationMessageFor(x => x.SiteId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3 has-danger">
                    <label for="" class="">نوع الإيصال</label>
                    @Html.DropDownListFor(x => x.RecId, Model.MyReceipts as List<SelectListItem>, new { @class = "form-control", @id = "recType" })
                    @Html.ValidationMessageFor(m => m.RecId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">تاريخ الإيصال</label>
                    @Html.TextBoxFor(m => m.RecDate, new { @class = "form-control", @id = "recDate", @type = "date" })
                    @Html.ValidationMessageFor(m => m.RecDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">المبلغ</label>
                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @id = "amount", @Value = "", @type = "number" })
                    @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">رقم الإيصال</label>
                    @Html.TextBoxFor(m => m.RecNumber, new { @class = "form-control", @id = "recNumber", @readonly = "true" })
                    @Html.ValidationMessageFor(m => m.RecNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">العملة</label>
                    @Html.DropDownListFor(x => x.CurrencyName, Model.MyCurrency as List<SelectListItem>, new { @class = "form-control", @id = "currency" })
                    @Html.ValidationMessageFor(m => m.CurrencyName, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">الغرض</label>
                    @Html.DropDownListFor(x => x.PurpId, Model.MyPurposes as List<SelectListItem>, new { @class = "form-control", @id = "purpose" })
                    @Html.ValidationMessageFor(m => m.PurpId, "", new { @class = "text-danger" })
                   
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">طريقة الدفع</label>
                    @Html.DropDownListFor(x => x.PaymentId, Model.MyPayments as List<SelectListItem>, new { @class = "form-control", @id = "paymentmethod" })
                    @Html.ValidationMessageFor(m => m.PaymentId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">وسيلة التعرف</label>
                    @Html.DropDownListFor(x => x.KnowingId, Model.MyKnowingMethods as List<SelectListItem>, "--إختار وسيلة التعرف--", new { @class = "form-control", @id = "knowingMethod" })
                </div>
            </div>
            <div class="row" id="chequeInformation">
                <div class="form-group col-md-3">
                    <label for="" class="" id="lblbankNames" hidden="hidden">بنك</label>
                    @Html.DropDownListFor(x => x.ChequeBankId, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", @id = "bankNames", @hidden = "hidden" })
                    @Html.ValidationMessageFor(m => m.ChequeBankId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="" id="lblchequeNumber" hidden="hidden">رقم الشيك</label>
                    @Html.TextBoxFor(m => m.ChequeNumber, new { @class = "form-control", @id = "chequeNumber", @Value = "", @hidden = "hidden" })
                    @Html.ValidationMessageFor(m => m.ChequeNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="chequeDate" class="" id="lblchequeDate" hidden="hidden">تاريخ الإستحقاق</label>
                    @Html.TextBoxFor(m => m.ChequeDate, new { @class = "form-control", @id = "chequeDate", @type = "date",@hidden="hidden"})
                    @Html.ValidationMessageFor(m => m.ChequeDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" >
                <div class="col-md-10">
                    <button class="btn m-btn--pill btn-success " formaction='@Url.Action("SaveDonation","Donation")'>حفظ</button>
                    
                </div>
                
                <h4 class="text-danger">@TempData["ModelErrors"]</h4>
            </div>
            
            <hr>
}
        <div class="m-stack m-stack--ver m-stack--general">
            <div class="m-section__content">
                <div class="" data-code-preview="true" data-code-html="true" data-code-js="false">
                    <div class="">
                        <div class="m-stack m-stack--ver m-stack--general">

                            <div class="m-stack__item m-stack__item--right">
                                <button class="btn btn-danger m-btn m-btn--icon m-btn--pill cancel " data-container="body" data-toggle="m-popover" data-placement="top" data-content="جعل الإيصال لاغى " data-original-title="" title="" @*formaction='@Url.Action("CancelReceipt")'*@ id="cancelBtn">
                                    <span>
                                        <i class="fa flaticon-cancel"></i>
                                        <span> إلغاء إيصال </span>
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
            
        <div id="loadingIndicator" class="submit-progress d-none">
            <i class="fa fa-2x fa-spinner fa-spin"></i>
            <label>Please Wait....</label>
        </div>
    </div>
</main>
<!--Start Cancel Receipt Model-->

<div id="myModalCaneclReceipt" class="modal fade " style="text-align:center">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

<!--End Cancel Receipt Model-->
<script type="text/javascript">
    $('#cancelBtn').click(function () {
        var recTypeID = $("#recType option:selected").val();
        if (recTypeID != -1)
        {
            var recNumber = $("#recNumber").val();
            $.get("@Url.Action("CancelReceipt", "Donation")/", { RecNumber: recNumber, RecId: recTypeID }, 
                function (data) { $('.modal-body').html(data); })
            $('#myModalCaneclReceipt').modal('show');
            $('#myModalCaneclReceipt').on('hidden.bs.modal', function (e) {
                $('.modal-body').html("");
            })
        }
        else
        {
            $('#recType').css("border", "1px solid #f4516c")
            //field-validation-error
        }

    });


    $(document).ready(function () {
        //Select Default Value For sites DropDownList
        $("#sites").val(-1);
        //Select Default Value For Paymentmethod DropDownList
        $("#paymentmethod").val(-1);
        //get NextReceiptNumber When RecType changed
        $("#recType").val(-1);
        $("#currency").val("جنيه مصري");
        
        $("#recType").change(function () {
            var selectedvalue = $("#recType option:selected").val();
            if (selectedvalue == "-1" ) {
                $("#recNumber").val("");
            }
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetNextReceiptNoFromRecType", "Donation")',
                dataType: 'json',
                data: { RecTypeId: selectedvalue },
                success: function (response) {
                    var RecNo = $.parseJSON(response);
                    if (RecNo[0].NextReceiptNo != null && RecNo[0].NextReceiptNo != 0) {
                        if ((RecNo[0].LastSavedRecNo == RecNo[0].NextReceiptNo && RecNo[0].LastSavedRecNo == RecNo[0].LastReceiptNo) || RecNo[0].LastCanceledReceiptNo == RecNo[0].LastReceiptNo) {
                            $("#recNumber").val("يجب تسليم هذا الدفتر");
                        }
                        else {
                            $("#recNumber").val(RecNo[0].NextReceiptNo);
                        }
                    }
                    else {
                        //get FirstReceiptNumber When RecType changed,If "NextReceiptNo From Table BookResposibilities" Is null
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("GetReceiptNoFromRecType", "Donation")',
                            dataType: 'json',
                            data: { RecTypeId: selectedvalue },
                            success: function (response) {
                                var FirstRecNo = $.parseJSON(response);
                                $("#recNumber").val(FirstRecNo[0].FirstReceiptNo);
                            },
                            error: function (response) {
                                console.log(response);
                            }
                        });
                    }
                },
                error: function (response) {
                    console.log(response);
                }
            });
        });
    });
    //Show Hidden Div When User Choose cheque as payment method only
    $("#paymentmethod").change(function () {
        var paymentMethodSelectedValue = $("#paymentmethod option:selected").val();
        if (paymentMethodSelectedValue.toString() == '3') {
            $('#bankNames').removeAttr('hidden');
            $('#chequeNumber').removeAttr('hidden');
            $('#chequeDate').removeAttr('hidden');
            $('#lblbankNames').removeAttr('hidden');
            $('#lblchequeNumber').removeAttr('hidden');
            $('#lblchequeDate').removeAttr('hidden');
            $.getJSON("/Donation/PopulateBankInfo", null, function (data) {
                data = $.map(data, function (item, a) {
                    return "<option value=" + item.Value + ">" + item.Text + "</option>";
                });
                $("#bankNames").html(data);
                $("#bankNames").val(-1);
                $("#bankInfoChecked").val('true');
            });
        }
        else {
            $('#bankNames').attr("hidden", "hidden");
            $('#chequeNumber').attr("hidden", "hidden");
            $('#chequeDate').attr("hidden", "hidden");
            $('#lblbankNames').attr("hidden", "hidden");
            $('#lblchequeNumber').attr("hidden", "hidden");
            $('#lblchequeDate').attr("hidden", "hidden");
            $("#bankNames").html(null);
            $("#bankInfoChecked").val('false');
        }
    });
    var item = [];
    $("#donors").autocomplete({
        source: function (request, response) {
            if ($("#donors").val != null) {
                $.ajax({
                    url: '@Url.Action("AutoCompleteDonor", "Donation")',
                    type: "GET",
                    data: { prefix: $("#donors").val() },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        //$("#donors").html(''),
                        response($.map(data, function (item) {
                            return {
                                label: item.name,
                                value: item.id
                            }
                        }));
                    }
                });
            }
        },
        select: function (event, ui) {
            this.value = ui.item.label;
            $("#donorId").val(ui.item.value);
            return false;
        },
        search: function (event, ui) {
            $(".submit-progress").removeClass("d-none");
        },
        response: function (event, ui) {
            $(".submit-progress").addClass("d-none");
        }
    });


    ///  script Rectype Change 
    $('#recType').change(function () {
        debugger;
        var recTypeValue = $('#recType').val();
         
        if (recTypeValue == 6) //10 داوو مرضاكم 
        {
            $('#amount').val('10').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);

        }
        else if (recTypeValue == 7) // 50 داوو مرضاكم 
        {
            $('#amount').val('50').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);
        }
        else if (recTypeValue == 8) // 100 داوو مرضاكم 
        {
            $('#amount').val('100').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);
        }
        else if (recTypeValue == 9) // 10 زيارة مريض
        {
            $('#amount').val('10').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);
        }
        else if (recTypeValue == 10) // 50 زيارة مريض 
        {
            $('#amount').val('50').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);
        }
        else if (recTypeValue == 11) // 100 زيارة مريض 
        {
            $('#amount').val('100').attr('readonly', true);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', true);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', true);
        }
        else
        {
            $('#amount').attr('readonly', false);;
            $('#purpose').val('4');
            $('#purpose option:not(:selected)').attr('disabled', false);
            $('#currency').val('جنيه مصري');
            $('#currency option:not(:selected)').attr('disabled', false);
        }
    });


</script>

@if (TempData["Msg"] != null)
{
    if (TempData["Msg"].ToString() == "تم الحفظ بنجاح")
    {
        <script>
            $(function (e) {
                swal({
                    title: "حفظ",
                    text: "تم الحفظ بنجاح",
                    type: "success",
                    confirmButtonClass: "btn btn-success"
                })

            });
        </script>
    }
    else if (TempData["Msg"].ToString() == "تم إلغاء الإيصال بنجاح")
    {
        <script>
            $(function (e) {
                swal({
                    title: "حفظ",
                    text: "تم إلغاء الإيصال بنجاح",
                    type: "success",
                    confirmButtonClass: "btn btn-success"
                })

            });
        </script>
    }
    else
    {
        <script>
            $(function (e) {
            swal({
                title: "خطأ",
                    text: "لم يتم الحفظ",
                    type: "error",
                    confirmButtonClass: "btn btn-danger"})
            });
        </script>
    }
}