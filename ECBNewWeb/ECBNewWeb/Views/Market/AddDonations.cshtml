@model ECBNewWeb.Models.DonationData

@{
    ViewBag.Title = "AddDonations";
    Layout = "~/Views/Shared/_LayoutShefaa2.cshtml";
}
<!--Scripts-->
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/fontawesome.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<script src="//code.jquery.com/jquery-1.12.4.js"></script>
<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<!--End Scripts-->
<!-- sidebar-wrapper------------------------------------Content---------------------------------------  -->
<main class="page-content">
    <div class="container-fluid">
        <h2>بيانات إيصال التبرع</h2>
        <p>إضافة تبرع</p>
        <hr>
        @using (Html.BeginForm("SaveDonation", "Donation", FormMethod.Post))
        {
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="" class="">اسم المحصل</label>
                    @{ var UserSession = Session["CurrentUser"] as ECBNewWeb.CustomAuthentication.CustomMembershipUser;
                        var UserName = @UserSession.FirstName + " " + @UserSession.LastName;}
                    <input type="text" class="form-control" value="@UserName" disabled>
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">اسم المتبرع</label>
                    @Html.TextBoxFor(m => m.DonorName, new { @class = "form-control", @id = "donors" })

                    @*Related Donor Id stored in the below hidden field*@
                    @Html.TextAreaFor(m => m.DonorId, new { @id = "donorId", @hidden = true })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">الموقع</label>
                    @Html.DropDownListFor(x => x.SiteId, Model.MySites as List<SelectListItem>, new { @class = "form-control", @id = "sites" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">نوع الإيصال</label>
                    @Html.DropDownListFor(x => x.RecId, Model.MyReceipts as List<SelectListItem>, "--إختار إيصال--", new { @class = "form-control", @id = "recType" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">تاريخ الإيصال</label>
                    @Html.TextBoxFor(m => m.RecDate, new { @class = "form-control", @id = "recDate", @type = "date" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">المبلغ</label>
                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @id = "amount", @Value = "", @type = "number" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">رقم الإيصال</label>
                    @Html.TextBoxFor(m => m.RecNumber, new { @class = "form-control", @id = "recNumber", @Value = "" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">العملة</label>
                    @Html.DropDownListFor(x => x.CurrencyName, Model.MyCurrency as List<SelectListItem>, "--إختار عملة--", new { @class = "form-control", @id = "currency" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">الغرض</label>
                    @Html.DropDownListFor(x => x.PurpId, Model.MyPurposes as List<SelectListItem>, "--إختار غرض--", new { @class = "form-control", @id = "purpose" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">طريقة الدفع</label>
                    @Html.DropDownListFor(x => x.PaymentId, Model.MyPayments as List<SelectListItem>, new { @class = "form-control", @id = "paymentmethod" })
                </div>
                <div class="form-group col-md-3">
                    <label for="" class="">وسيلة التعرف</label>
                    @Html.DropDownListFor(x => x.KnowingId, Model.MyKnowingMethods as List<SelectListItem>, "--إختار وسيلة التعرف--", new { @class = "form-control", @id = "knowingMethod" })
                </div>


            </div>
            <div class="m-demo" data-code-preview="true" data-code-html="true" data-code-js="false">
                <div class="m-demo__preview  m-demo__preview--btn">
                <button class="btn m-btn--pill btn-success  col-md-1 form-group" formaction="SaveDonation" type="submit">حفظ</button>
                <button class="btn btn-danger m-btn--pill col-md-1 form-group" formaction="CancelReceipt" type="submit">الغاء</button>
                </div>
            </div>



            <hr>
 }
        <div id="loadingIndicator" class="submit-progress d-none">
            <i class="fa fa-2x fa-spinner fa-spin"></i>
            <label>Please Wait....</label>
        </div>
    </div>
</main>

<script type="text/javascript">
    $(document).ready(function () {
        //Select Default Value For sites DropDownList
        $("#sites").val(-1);
        //Select Default Value For Paymentmethod DropDownList
        $("#paymentmethod").val(-1);
        //get NextReceiptNumber When RecType changed
        $("#recType").change(function () {
            var selectedvalue = $("#recType option:selected").val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetNextReceiptNoFromRecType", "Donation")',
                dataType: 'json',
                data: { RecTypeId: selectedvalue },
                success: function (response) {
                    var RecNo = $.parseJSON(response);
                    if (RecNo[0].NextReceiptNo != null && RecNo[0].NextReceiptNo != 0) {
                        if (RecNo[0].LastSavedRecNo == RecNo[0].NextReceiptNo && RecNo[0].LastSavedRecNo == RecNo[0].LastReceiptNo || RecNo[0].LastCanceledReceiptNo == RecNo[0].LastReceiptNo) {
                            $("#recNumber").val("يجب تسليم هذا الدفتر");
                        }
                        else {
                            $("#recNumber").val(RecNo[0].NextReceiptNo);
                        }
                    }
                    else {
                        //get FirstReceiptNumber When RecType changed,If "NextReceiptNo From Table BookResposibilities" Is null
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("GetReceiptNoFromRecType", "Donation")',
                            dataType: 'json',
                            data: { RecTypeId: selectedvalue },
                            success: function (response) {
                                var FirstRecNo = $.parseJSON(response);
                                $("#recNumber").val(FirstRecNo[0].FirstReceiptNo);
                            },
                            error: function (response) {
                                console.log(response);
                            }
                        });
                    }
                },
                error: function (response) {
                    console.log(response);
                }
            });
    });
 });
    var item = [];
    $("#donors").autocomplete({
        source: function (request, response) {
            if ($("#donors").val != null) {
                $.ajax({
                    url: '@Url.Action("AutoCompleteDonor", "Donation")',
                    type: "GET",
                    data: { prefix: $("#donors").val() },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        //$("#donors").html(''),
                        response($.map(data, function (item) {
                            return {
                                label: item.name,
                                value: item.id
                            }
                        }));
                    }
                });
            }
        },
        select: function (event, ui) {
            this.value = ui.item.label;
            $("#donorId").val(ui.item.value);
            return false;
        },
        search: function (event, ui) {
            $(".submit-progress").removeClass("d-none");
        },
        response: function (event, ui) {
            $(".submit-progress").addClass("d-none");
        }
    });
</script>
